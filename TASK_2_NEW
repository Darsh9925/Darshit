import pexpect
import difflib

# Define variables
ip_address = '192.168.56.101'
username = 'prne'
password = 'cisco123!'
password_enable = 'class123!'
new_hostname = 'R1'

# Function to handle errors during each session step
def check_result(session_result, error_message):
    if session_result != 0:
        print(f"--- FAILURE! {error_message}")
        exit()

# Start an SSH session
session = pexpect.spawn(f'ssh -o "StrictHostKeyChecking=no" {username}@{ip_address}', encoding='utf-8', timeout=30)
result = session.expect(['Password:', pexpect.TIMEOUT, pexpect.EOF])
check_result(result, f"Creating a session for {ip_address}")

# Enter password
session.sendline(password)
result = session.expect(['>', pexpect.TIMEOUT, pexpect.EOF])
check_result(result, f"Entering password for {ip_address}")

# Enter enable mode
session.sendline('enable')
result = session.expect(['Password:', pexpect.TIMEOUT, pexpect.EOF])
check_result(result, "Entering enable mode")

# Enter enable password
session.sendline(password_enable)
result = session.expect(['#', pexpect.TIMEOUT, pexpect.EOF])
check_result(result, "Entering enable mode after password")

# Enter config mode
session.sendline('configure terminal')
result = session.expect([r'\S+\(config\)#', pexpect.TIMEOUT, pexpect.EOF])
check_result(result, "Entering config mode")

# Set new hostname
session.sendline(f'hostname {new_hostname}')
result = session.expect([rf'{new_hostname}\(config\)#', pexpect.TIMEOUT, pexpect.EOF])
check_result(result, "Setting hostname")

# Save configuration
session.sendline('do write memory')
result = session.expect([rf'{new_hostname}\(config\)#', pexpect.TIMEOUT, pexpect.EOF])
check_result(result, "Saving configuration")

# Exit configuration mode
session.sendline('exit')
session.sendline('exit')

# Capture running and startup configurations
session.sendline('show running-config')
session.expect(['#', pexpect.TIMEOUT, pexpect.EOF])
running_config = session.before.splitlines()

session.sendline('show startup-config')
session.expect(['#', pexpect.TIMEOUT, pexpect.EOF])
startup_config = session.before.splitlines()

# Close the session
session.sendline('exit')
session.close()

# Compare and display differences between configurations
print("\n--- Configuration Differences ---")
for line in difflib.unified_diff(startup_config, running_config, fromfile='Startup Config', tofile='Running Config', lineterm=''):
    print(line)

print("\n--- Success! Configuration Comparison Complete ---")
